name: integration
on:
  pull_request:
    # Don't run Rust tests if only docs changed.
    paths-ignore:
      - 'docs/**'
  # Also support ad-hoc calls for workflow.
  workflow_call:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  smoke:
    runs-on: buildjet-16vcpu-ubuntu-2204
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: install nix
        uses: nixbuild/nix-quick-install-action@v28

      - name: setup nix cache
        uses: nix-community/cache-nix-action@v5
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          backend: buildjet

      - name: Load rust cache
        uses: astriaorg/buildjet-rust-cache@v2.5.1
        with:
          # bust cache with unique key; increment the integer in `^v(\d+)` to force fresh cache
          prefix-key: "v0-rust-smoke"

      - name: run the smoke-test suite
        run: nix develop --command just smoke

  pmonitor:
    runs-on: buildjet-16vcpu-ubuntu-2204
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: install nix
        uses: nixbuild/nix-quick-install-action@v28

      - name: setup nix cache
        uses: nix-community/cache-nix-action@v5
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          backend: buildjet

      - name: Load rust cache
        uses: astriaorg/buildjet-rust-cache@v2.5.1

      - name: run the pmonitor integration tests
        run: nix develop --command just integration-pmonitor

  # Integration tests that run against the public testnet endpoints.
  # Temporarily disabling these in CI, as the testnet endpoints are
  # incompatible with `main`, given GH5010.
  # testnet:
  #   runs-on: buildjet-16vcpu-ubuntu-2204
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         lfs: true
  #
  #     - name: install nix
  #       uses: nixbuild/nix-quick-install-action@v28
  #
  #     - name: setup nix cache
  #       uses: nix-community/cache-nix-action@v5
  #       with:
  #         primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
  #         restore-prefixes-first-match: nix-${{ runner.os }}-
  #         backend: buildjet
  #
  #     - name: Load rust cache
  #       uses: astriaorg/buildjet-rust-cache@v2.5.1
  #
  #     - name: run the testnet integration tests
  #       run: nix develop --command just integration-testnet
