name: docs-lint
on:
  pull_request:
  # Also support ad-hoc calls for workflow.
  workflow_call:
  workflow_dispatch:

jobs:
  rustdocs:
    # We use a custom script to generate the index page for https://rustdoc.penumbra.zone,
    # and refactors to rust deps can break that generation. Let's ensure this script exits 0
    # on PRs, but we'll still only deploy after merge into main.
    runs-on: buildjet-8vcpu-ubuntu-2204
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install nightly rust toolchain
        # The script for rustdoc build requires nightly toolchain.
        run: rustup toolchain install nightly

      # Loading cache takes ~15s, but saves us minutes of build.
      - name: Load rust cache
        uses: astriaorg/buildjet-rust-cache@v2.5.1

      # Don't bother importing nix env, since we only need cargo-nightly,
      # no other deps.

      # Building with warm cache takes ~40s, depending on changes.
      - name: Build rustdocs
        run: ./deployments/scripts/rust-docs

  # Also validate that the `mdbook` docs (guide & protocol) build correctly.
  # In particular, links are checked within the docs.
  mdbook:
    # Downgrading runner size to 4vcpu, since we're not compiling code.
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: false

      - name: Load rust cache
        uses: astriaorg/buildjet-rust-cache@v2.5.1

      # Don't bother importing nix env, since we only need a few cargo deps.
      # It's OK to install from crates, building from source, because the
      # rust-cache restore on the previous step reduces the install step to ~5s.
      - name: Install mdbook dependencies
        run: cargo install mdbook mdbook-katex mdbook-mermaid mdbook-linkcheck

      - name: Build protocol docs
        run: cd docs/protocol && mdbook build
