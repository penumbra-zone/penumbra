[workspace]

resolver = "2"

exclude = ["tools/proto-compiler"]

# Also remember to add to deployments/scripts/rust-docs
members = [
  "crates/bench",
  "crates/bin/elcuity",
  "crates/bin/pcli",
  "crates/bin/pclientd",
  "crates/bin/pd",
  "crates/bin/pindexer",
  "crates/bin/pmonitor",
  "crates/cnidarium-component",
  "crates/core/app",
  "crates/core/app-tests",
  "crates/core/asset",
  "crates/core/component/community-pool",
  "crates/core/component/compact-block",
  "crates/core/component/auction",
  "crates/core/component/dex",
  "crates/core/component/distributions",
  "crates/core/component/fee",
  "crates/core/component/funding",
  "crates/core/component/governance",
  "crates/core/component/ibc",
  "crates/core/component/sct",
  "crates/core/component/shielded-pool",
  "crates/core/component/stake",
  "crates/core/keys",
  "crates/core/num",
  "crates/core/transaction",
  "crates/core/txhash",
  "crates/crypto/decaf377-fmd",
  "crates/crypto/decaf377-frost",
  "crates/crypto/decaf377-ka",
  "crates/crypto/eddy",
  "crates/crypto/proof-params",
  "crates/crypto/proof-setup",
  "crates/crypto/tct",
  "crates/custody",
  "crates/custody-ledger-usb",
  "crates/misc/measure",
  "crates/misc/tct-visualize",
  "crates/proto",
  "crates/test/mock-client",
  "crates/test/mock-consensus",
  "crates/test/mock-tendermint-proxy",
  "crates/test/tct-property-test",
  "crates/test/tracing-subscriber",
  "crates/util/auto-https",
  "crates/util/tendermint-proxy",
  "crates/util/tower-trace",
  "crates/util/cometindex",
  "crates/view",
  "crates/wallet",
  "tools/summonerd",
  "tools/parameter-setup",
]

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"

# config for 'cargo release'
[workspace.metadata.release]
# Instruct cargo-release to increment versions for all packages in the workspace in lockstep.
shared-version = true
# Format spec for the auto-generated git tag, based on new version for release.
tag-name = "v{{version}}"
# The message is required for an annotated tag to be created.
tag-message                = "Penumbra version {{version}}"
pre-release-commit-message = "chore: release version {{version}}"
# Permit publishing to crates.io; local developers should run `cargo release --no-publish`
# to prepare the git info, then pushing to remote with tag will trigger crates.io publication.
publish = true
# Do commit, tag, and push the version bump, triggering a new release.
tag = true
# Don't push, since we're still evaluating the new release workflow.
push = false
# Edit each crate's Cargo.toml, bumping versions for other workspace crates.
dependent-version = "upgrade"
# Increase default ratelimit on publishing packages
rate-limit = { existing-packages = 50 }
# Permit publishing from any branch, because in GHA CI context, HEAD is checked out.
allow-branch = ["*"]

[workspace.package]
authors    = ["Penumbra Labs <team@penumbralabs.xyz"]
edition    = "2021"
version    = "2.0.0-alpha.9"
repository = "https://github.com/penumbra-zone/penumbra"
homepage   = "https://penumbra.zone"
license    = "MIT OR Apache-2.0"

[workspace.dependencies]
anyhow                           = { version = "1.0.75" }
ark-ec                           = { default-features = false, version = "0.4.2" }
ark-ff                           = { default-features = false, version = "0.4.2" }
ark-groth16                      = { default-features = false, version = "0.4.0" }
ark-r1cs-std                     = { default-features = false, version = "0.4.0" }
ark-relations                    = { version = "0.4" }
ark-serialize                    = { version = "0.4.2" }
ark-snark                        = { version = "0.4.0" }
ark-std                          = { default-features = false, version = "0.4" }
assert_cmd                       = { version = "2.0" }
async-stream                     = { version = "0.3.5" }
async-trait                      = { version = "0.1.52" }
axum                             = { version = "0.7.9" }
axum-extra                       = { version = "0.9.6" }
axum-server                      = { version = "0.7.1" }
base64                           = { version = "0.21.2" }
bech32                           = { version = "0.8.1" }
bincode                          = { version = "1.3.3" }
bitvec                           = { version = "1" }
blake2b_simd                     = { version = "1" }
bytes                            = { version = "1.2" }
camino                           = { version = "1" }
chacha20poly1305                 = { version = "0.9.0" }
chrono                           = { default-features = false, version = "0.4" }
clap                             = { version = "3.2" }
cnidarium                        = { version = "0.83", default-features = false}
cnidarium-component              = { default-features = false, version = "2.0.0-alpha.9", path = "crates/cnidarium-component" }
cometindex                       = { version = "2.0.0-alpha.9", path = "crates/util/cometindex" }
criterion                        = { version = "0.4" }
decaf377                         = { default-features = false, version = "0.10.1" }
decaf377-fmd                     = { version = "2.0.0-alpha.9", path = "crates/crypto/decaf377-fmd" }
decaf377-ka                      = { version = "2.0.0-alpha.9", path = "crates/crypto/decaf377-ka" }
decaf377-rdsa                    = { version = "0.11.0" }
derivative                       = { version = "2.2" }
directories                      = { version = "4.0.1" }
ed25519-consensus                = { version = "2.1" }
ethnum                           = { version = "1.3" }
futures                          = { version = "0.3.28" }
hex                              = { version = "0.4.3" }
http                             = { version = "1.2.0" }
http-body                        = { version = "1.0.1" }
http-body-util                   = { version = "0.1.2" }
humantime                        = { version = "2.1" }
ibc-proto                        = { default-features = false, version = "0.51.1" }
ibc-types                        = { default-features = false, version = "0.15.1" }
ibig                             = { version = "0.3" }
ics23                            = { version = "0.12.0" }
im                               = { version = "^15.1.0" }
indicatif                        = { version = "0.16" }
jmt                              = { version = "0.11", features = ["migration"] }
ledger-lib = { git = "https://github.com/ledger-community/rust-ledger", rev = "510bb3ca30639af4bdb12a918b6bbbdb75fa5f52" }
ledger-proto = { git = "https://github.com/ledger-community/rust-ledger", rev = "510bb3ca30639af4bdb12a918b6bbbdb75fa5f52" }
metrics                          = { version = "0.24.1" }
metrics-exporter-prometheus      = { version = "0.16", features = ["http-listener"] }
metrics-tracing-context          = { version = "0.17.0" }
num-bigint                       = { version = "0.4" }
num-traits                       = { default-features = false, version = "0.2.15" }
once_cell                        = { version = "1.8" }
parking_lot                      = { version = "0.12.1" }
pbjson                           = { version = "0.7.0" }
pbjson-types                     = { version = "0.7.0" }
penumbra-sdk-app                     = { default-features = false, version = "2.0.0-alpha.9", path = "crates/core/app" }
penumbra-sdk-asset                   = { default-features = false, version = "2.0.0-alpha.9", path = "crates/core/asset" }
penumbra-sdk-community-pool          = { default-features = false, version = "2.0.0-alpha.9", path = "crates/core/component/community-pool" }
penumbra-sdk-compact-block           = { default-features = false, version = "2.0.0-alpha.9", path = "crates/core/component/compact-block" }
penumbra-sdk-custody                 = { version = "2.0.0-alpha.9", path = "crates/custody" }
penumbra-sdk-custody-ledger-usb      = { version = "2.0.0-alpha.8", path = "crates/custody-ledger-usb" }
penumbra-sdk-auction                 = { default-features = false, version = "2.0.0-alpha.9", path = "crates/core/component/auction" }
penumbra-sdk-dex                     = { default-features = false, version = "2.0.0-alpha.9", path = "crates/core/component/dex" }
penumbra-sdk-distributions           = { default-features = false, version = "2.0.0-alpha.9", path = "crates/core/component/distributions" }
penumbra-sdk-fee                     = { default-features = false, version = "2.0.0-alpha.9", path = "crates/core/component/fee" }
penumbra-sdk-funding                 = { default-features = false, version = "2.0.0-alpha.9", path = "crates/core/component/funding" }
penumbra-sdk-governance              = { default-features = false, version = "2.0.0-alpha.9", path = "crates/core/component/governance" }
penumbra-sdk-ibc                     = { default-features = false, version = "2.0.0-alpha.9", path = "crates/core/component/ibc" }
penumbra-sdk-keys                    = { default-features = false, version = "2.0.0-alpha.9", path = "crates/core/keys" }
penumbra-sdk-mock-client             = { version = "2.0.0-alpha.9", path = "crates/test/mock-client" }
penumbra-sdk-mock-consensus          = { version = "2.0.0-alpha.9", path = "crates/test/mock-consensus" }
penumbra-sdk-mock-tendermint-proxy   = { version = "2.0.0-alpha.9", path = "crates/test/mock-tendermint-proxy" }
penumbra-sdk-num                     = { default-features = false, version = "2.0.0-alpha.9", path = "crates/core/num" }
penumbra-sdk-proof-params            = { default-features = false, version = "2.0.0-alpha.9", path = "crates/crypto/proof-params" }
penumbra-sdk-proof-setup             = { version = "2.0.0-alpha.9", path = "crates/crypto/proof-setup" }
penumbra-sdk-proto                   = { default-features = false, version = "2.0.0-alpha.9", path = "crates/proto" }
penumbra-sdk-sct                     = { default-features = false, version = "2.0.0-alpha.9", path = "crates/core/component/sct" }
penumbra-sdk-shielded-pool           = { default-features = false, version = "2.0.0-alpha.9", path = "crates/core/component/shielded-pool" }
penumbra-sdk-stake                   = { default-features = false, version = "2.0.0-alpha.9", path = "crates/core/component/stake" }
penumbra-sdk-tct                     = { default-features = false, version = "2.0.0-alpha.9", path = "crates/crypto/tct" }
penumbra-sdk-test-subscriber         = { version = "2.0.0-alpha.9", path = "crates/test/tracing-subscriber" }
penumbra-sdk-tower-trace             = { version = "2.0.0-alpha.9", path = "crates/util/tower-trace" }
penumbra-sdk-transaction             = { default-features = false, version = "2.0.0-alpha.9", path = "crates/core/transaction" }
penumbra-sdk-txhash                  = { default-features = false, version = "2.0.0-alpha.9", path = "crates/core/txhash" }
penumbra-sdk-view                    = { version = "2.0.0-alpha.9", path = "crates/view" }
penumbra-sdk-wallet                  = { version = "2.0.0-alpha.9", path = "crates/wallet" }
pin-project                      = { version = "1.0.12" }
pin-project-lite                 = { version = "0.2.9" }
poseidon377                      = { version = "1.2.0" }
proptest                         = { version = "1.6" }
proptest-derive                  = { version = "0.5.1" }
prost-types                      = { version = "0.13.4" }
prost                            = { version = "0.13.4" }
r2d2                             = { version = "0.8" }
r2d2_sqlite                      = { version = "0.25" }
rand                             = { version = "0.8.5" }
rand_chacha                      = { version = "0.3.1" }
rand_core                        = { version = "0.6.4" }
regex                            = { version = "1.8.1" }
rocksdb                          = { version = "0.21.0" }
rpassword                        = { version = "7" }
rstest                           = { version = "0.24.0" }
rustls                           = { version = "0.23.21" }
serde                            = { version = "1.0.186" }
serde_json                       = { version = "1.0.96" }
serde_unit_struct                = { version = "0.1" }
serde_with                       = { version = "3.5.1" }
sha2                             = { version = "0.10" }
sqlx                             = { version = "0.8", features = ["bigdecimal", "postgres", "runtime-tokio", "tls-rustls"] }
tap                              = "1.0.1"
tempfile                         = { version = "3.3.0" }
tendermint                       = { default-features = false, version = "0.40.3" }
tendermint-config                = { version = "0.40.3" }
tendermint-light-client-verifier = { version = "0.40.3" }
tendermint-proto                 = { version = "0.40.3" }
tendermint-rpc                   = { version = "0.40.3" }
termion                          = { version = "3" }
thiserror                        = { version = "1.0" }
time                             = { version = "0.3" }
tokio                            = { version = "1.39.0" }
tokio-stream                     = { version = "0.1.8" }
tokio-util                       = { version = "0.7" }
toml                             = { version = "0.7" }
tonic                            = { version = "0.12.3" }
tonic-reflection                 = { version = "0.12.3" }
tonic-web                        = { version = "0.12.3" }
tower                            = { version = "0.4.0" }
tower-http                       = { version = "0.6.2" }
tower-service                    = { version = "0.3.2" }
tracing                          = { version = "0.1" }
tracing-subscriber               = { version = "0.3.17", features = ["env-filter"] }
url                              = { version = "2.2" }
getrandom                        = { version = "0.2", default-features = false }

[patch.crates-io]
# Without this, the git dependency for ledger-lib will depend on the crates.io v0.1 version,
# and will fail to build.
ledger-proto = { git = "https://github.com/ledger-community/rust-ledger", rev = "510bb3ca30639af4bdb12a918b6bbbdb75fa5f52" }
